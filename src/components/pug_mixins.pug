
//- Create menu items li>a
mixin createListItems(classname, url, text, needPseudoForLink, linkModifier)
	li(class= classname+"__item")
		-
			var classnameLink = classname+"__link"
			classnameLink += needPseudoForLink ? " " + classname+"__link_pseudo" : ""
			classnameLink += linkModifier ? " " + classnameLink + "_" + linkModifier : ""
		
		a(class= classnameLink href= url)= text



//- Create list div>ul> n*(li>a)
mixin createList(classname, arrayItems, needLinksInside)
	ul(class= classname+"__list")
		if needLinksInside
			each i in arrayItems
				+createListItems(classname, i.url, i.text, i.needPseudoForLink, i.linkModifier)

		else
			each i in arrayItems
				li(class = classname + '__item')
					-
						var myClass = i.classname
						myClass += i.modifierClass ? " " + i.classname + "_" + i.modifierClass : ""
					div(class = myClass)
						div(class = i.classname + '__desc') !{i.textDesc}
						div(class = i.classname + '__price') !{i.textPrice}

	




//- Create logo div>a>img
mixin createLogo(classname, srcImg)
	div(class=classname)
		a(class=classname+"__link" href = "./change-me")
			img(class=classname+"__img" src=srcImg alt="Logotype")




//- ****** UIKit ******

//- Create rectangles for UIKit div
mixin createRect(classname, colorModifier, colorName, colorCSS)
	div(class=classname+'-wrapper')
		- 
			var classnameModificator = classname
			classnameModificator += colorModifier ? " "+classname+"_"+colorModifier : ""
		div(class=classnameModificator)
		b(class=classname+'__name')= colorName
		p(class=classname+'__desc')= colorCSS	






//----------createAnyTag----------
//- tag>text

mixin createAnyTag(tag, text, classname)
	- var newTag = '<'+ tag +' class="'+classname+'"' + '>'+text+'</'+ tag +'>'
	!=newTag

//----------createAnyTag----------



//----------createFontsExample----------
//- div>(div+tag)

- var tagsForChange = ['body', 'html']
mixin createFontsExample(tag, text, classname)
	div(class=classname) 
		- var changeTag = tag

		each val in tagsForChange
			if changeTag === val 
				-tag = 'p'
		-	
			var classnameTagName = classname + '__tagname'
				classnameTagName += ' '+classnameTagName+'_'+tag
		
		div(class=classnameTagName)= tag==='p' ? changeTag : tag.toUpperCase()
		
		+createAnyTag(tag, text, classname+'__tagtext')

//----------createFontsExample----------



//----------createForm----------
//- create form(attributes)>block

mixin createForm(classname, method, action, formTitleText)
	- var attributes = {};
	- attributes.action = action;
	- attributes.method = method;
	- attributes.class = classname;
	form(class="site-form")&attributes(attributes)
		if formTitleText
			div.site-form__title= formTitleText

		if block
			block

//----------createForm----------



//----------createFormButton----------
//- create button(attributes) for forms

mixin createFormButton(classname, text, type)
	- var attributes = {};
	- attributes.type = type || 'button';
	- attributes.class = classname+'__button';
	button(class="form-button")&attributes(attributes)= text || 'OK'
		i.material-icons.form-button__icon arrow_forward

//----------createFormButton----------



//----------createButton----------
//- Create a>span

mixin createButton(classname, text, modifier)
	- 
		var classnameLink = classname
		classnameLink += modifier ? " site-button site-button_"+modifier : " site-button"

	a(class=classnameLink  href="./change-me")
		span(class=classname+ "__text")= text

//----------createButton----------










//----------может, это потом понадобится----------

//- div>tag>text
mixin createTag(tag, text)
	- var mytag = '<'+tag+'>'
	div !{mytag} 
		| !{text}

